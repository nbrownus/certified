#!/bin/sh

#/ Usage: certified-crt [--ca-password=<ca-password>] [--days=<days>] [--db=<db>] [--name=<name>] [--self-signed] CN=<common-name>
#/   --ca-password=<ca-password> password for the CA private key
#/   --days=<days>               days until the certificate expires (defaults to 3650)
#/   --db=<db>                   OpenSSL database directory
#/   --name=<name>               filename to use (default derived from the certificate common name)
#/   --self-signed               generate a self-signed certificate instead of using the CA
#/   CN=<common-name>            certificate common name (usually a domain name)

set -e

. "$(dirname "$(dirname "$0")")/lib/certified.sh"

while [ "$#" -gt 0 ]
do
    case "$1" in
        --ca-password) CA_PASSWORD="$2" shift 2;;
        --ca-password=*) CA_PASSWORD="$(echo "$1" | cut -d"=" -f"2-")" shift;;
        --days) DAYS="$2" shift 2;;
        --days=*) DAYS="$(echo "$1" | cut -d"=" -f"2-")" shift;;
        --db) DB="$2" shift 2;;
        --db=*) DB="$(echo "$1" | cut -c"6-")" shift;;
        --name) NAME="$2" shift 2;;
        --name=*) NAME="$(echo "$1" | cut -d"=" -f"2-")" shift;;
        --self|--self-sign|--self-signed) SELF_SIGNED="--self-signed" shift;;
		-h|--help) usage 0;;
		-*) usage 1;;
        CN=*) CN="$(echo "$1" | cut -d"=" -f"2-")" shift;;
		*) break;;
    esac
done
if [ -f "$DB/defaults.sh" ]
then . "$DB/defaults.sh"
fi
[ "$CN" ] || usage 1
: ${NAME:="$(echo "$CN" | tr "[:upper:]" "[:lower:]" | tr " " "-")"}

mkdir -p "$DB/certs"
cd "$DB"

if [ -f "certs/$NAME.crt" ]
then die "certificate $NAME.crt already exists; use --revoke and try again"
fi
if [ ! -f "$NAME.csr" ]
then die "certificate signing request $NAME.csr does not exist"
fi
if [ ! -f "private/$NAME.key" ]
then die "private key $NAME.key does not exist"
fi

if [ -z "$SELF_SIGNED" ]
then
    trap "rm -f \"$NAME.cnf.new\"" EXIT INT QUIT TERM
    sed "s/#authorityKeyIdentifier/authorityKeyIdentifier/" "$NAME.cnf" >"$NAME.cnf.new"
    mv "$NAME.cnf.new" "$NAME.cnf"
    trap "" EXIT INT QUIT TERM
fi

if [ "$SELF_SIGNED" ]
then
    log "self-signing the certificate"
    openssl ca -batch -config "$NAME.cnf" -extensions "x509_extensions" -in "$NAME.csr" -keyfile "private/$NAME.key" -notext -out "certs/$NAME.crt" -selfsign
elif [ "$CA_PASSWORD" ]
then
    log "signing the certificate with the CA"
    if [ "$CA_PASSWORD" = "-" ]
    then PASSIN="stdin"
    else PASSIN="pass:$CA_PASSWORD"
    fi
    openssl ca -batch -config "$NAME.cnf" -extensions "x509_extensions" -in "$NAME.csr" -notext -out "certs/$NAME.crt" -passin "$PASSIN"
elif grep -q "certificate = certs/intermediate-ca.crt" "$NAME.cnf"
then
    log "signing the certificate"
    openssl ca -batch -config "$NAME.cnf" -extensions "x509_extensions" -in "$NAME.csr" -notext -out "certs/$NAME.crt"
else
    log "signing the certificate with an alternative CA"
    openssl ca -batch -config "$NAME.cnf" -extensions "x509_extensions" -in "$NAME.csr" -notext -out "certs/$NAME.crt"
fi
